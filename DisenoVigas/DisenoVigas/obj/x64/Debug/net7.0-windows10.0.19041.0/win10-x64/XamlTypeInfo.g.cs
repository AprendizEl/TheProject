//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DisenoVigas
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        private global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace DisenoVigas.DisenoVigas_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[115];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart";
            _typeNameTable[5] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[6] = "System.Collections.Generic.IEnumerable`1<LiveChartsCore.ISeries>";
            _typeNameTable[7] = "LiveChartsCore.Kernel.Sketches.IChart";
            _typeNameTable[8] = "LiveChartsCore.Measure.Margin";
            _typeNameTable[9] = "LiveChartsCore.Motion.MotionCanvas`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>";
            _typeNameTable[10] = "LiveChartsCore.VisualElements.VisualElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>";
            _typeNameTable[11] = "LiveChartsCore.Kernel.ChartElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>";
            _typeNameTable[12] = "System.Collections.Generic.IEnumerable`1<LiveChartsCore.Kernel.Sketches.ICartesianAxis>";
            _typeNameTable[13] = "System.Collections.Generic.IEnumerable`1<LiveChartsCore.Section`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>";
            _typeNameTable[14] = "System.Collections.Generic.IEnumerable`1<LiveChartsCore.Kernel.ChartElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>";
            _typeNameTable[15] = "LiveChartsCore.DrawMarginFrame`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>";
            _typeNameTable[16] = "LiveChartsCore.Measure.ZoomAndPanMode";
            _typeNameTable[17] = "System.Enum";
            _typeNameTable[18] = "System.ValueType";
            _typeNameTable[19] = "Double";
            _typeNameTable[20] = "LiveChartsCore.Measure.TooltipFindingStrategy";
            _typeNameTable[21] = "TimeSpan";
            _typeNameTable[22] = "System.Func`2<Single, Single>";
            _typeNameTable[23] = "System.MulticastDelegate";
            _typeNameTable[24] = "System.Delegate";
            _typeNameTable[25] = "LiveChartsCore.Measure.LegendPosition";
            _typeNameTable[26] = "LiveChartsCore.Drawing.IPaint`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>";
            _typeNameTable[27] = "System.Nullable`1<Double>";
            _typeNameTable[28] = "LiveChartsCore.Kernel.Sketches.IChartLegend`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>";
            _typeNameTable[29] = "LiveChartsCore.Measure.TooltipPosition";
            _typeNameTable[30] = "LiveChartsCore.Kernel.Sketches.IChartTooltip`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>";
            _typeNameTable[31] = "System.Windows.Input.ICommand";
            _typeNameTable[32] = "DisenoVigas.Controls.GraphicControl";
            _typeNameTable[33] = "WinUIEx.WindowEx";
            _typeNameTable[34] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[35] = "String";
            _typeNameTable[36] = "Microsoft.UI.Windowing.AppWindow";
            _typeNameTable[37] = "WinUIEx.Icon";
            _typeNameTable[38] = "WinUIEx.WindowState";
            _typeNameTable[39] = "Microsoft.UI.Windowing.AppWindowPresenter";
            _typeNameTable[40] = "Microsoft.UI.Windowing.AppWindowPresenterKind";
            _typeNameTable[41] = "WinUIEx.SystemBackdrop";
            _typeNameTable[42] = "Microsoft.UI.Xaml.Media.MicaBackdrop";
            _typeNameTable[43] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[44] = "Microsoft.UI.Composition.SystemBackdrops.MicaKind";
            _typeNameTable[45] = "DisenoVigas.MainWindow";
            _typeNameTable[46] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[47] = "Microsoft.UI.Xaml.CornerRadius";
            _typeNameTable[48] = "Microsoft.UI.Xaml.Controls.ScrollView";
            _typeNameTable[49] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[50] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[51] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.ScrollingScrollMode";
            _typeNameTable[53] = "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation";
            _typeNameTable[54] = "Microsoft.UI.Composition.CompositionPropertySet";
            _typeNameTable[55] = "Microsoft.UI.Composition.CompositionObject";
            _typeNameTable[56] = "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility";
            _typeNameTable[57] = "Microsoft.UI.Xaml.Controls.ScrollingChainMode";
            _typeNameTable[58] = "Microsoft.UI.Xaml.Controls.ScrollingRailMode";
            _typeNameTable[59] = "Microsoft.UI.Xaml.Controls.ScrollingInputKinds";
            _typeNameTable[60] = "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter";
            _typeNameTable[61] = "Microsoft.UI.Xaml.FrameworkElement";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Controls.ScrollingInteractionState";
            _typeNameTable[63] = "Single";
            _typeNameTable[64] = "Microsoft.UI.Xaml.Controls.ScrollingZoomMode";
            _typeNameTable[65] = "DisenoVigas.Views.DisenoPage";
            _typeNameTable[66] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[67] = "DisenoVigas.ViewModels.DisenoViewModel";
            _typeNameTable[68] = "CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient";
            _typeNameTable[69] = "CommunityToolkit.Mvvm.ComponentModel.ObservableObject";
            _typeNameTable[70] = "DisenoVigas.Views.DisenoRevisionPage";
            _typeNameTable[71] = "DisenoVigas.ViewModels.DisenoRevisionViewModel";
            _typeNameTable[72] = "DisenoVigas.Views.MainPage";
            _typeNameTable[73] = "DisenoVigas.ViewModels.MainViewModel";
            _typeNameTable[74] = "DisenoVigas.Views.RevisionPage";
            _typeNameTable[75] = "DisenoVigas.ViewModels.RevisionViewModel";
            _typeNameTable[76] = "DisenoVigas.Helpers.EnumToBooleanConverter";
            _typeNameTable[77] = "DisenoVigas.Views.SettingsPage";
            _typeNameTable[78] = "DisenoVigas.ViewModels.SettingsViewModel";
            _typeNameTable[79] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[80] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[81] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[82] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[83] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[84] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[85] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[86] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[87] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[88] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[89] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[90] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[91] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[92] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[93] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[94] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[95] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[96] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[97] = "Microsoft.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[98] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[99] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[100] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[101] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[102] = "DisenoVigas.Helpers.NavigationHelper";
            _typeNameTable[103] = "Microsoft.UI.Xaml.Controls.NavigationViewItemHeader";
            _typeNameTable[104] = "DisenoVigas.Behaviors.NavigationViewHeaderBehavior";
            _typeNameTable[105] = "Microsoft.Xaml.Interactivity.Behavior`1<Microsoft.UI.Xaml.Controls.NavigationView>";
            _typeNameTable[106] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[107] = "DisenoVigas.Behaviors.NavigationViewHeaderMode";
            _typeNameTable[108] = "DisenoVigas.Views.ShellPage";
            _typeNameTable[109] = "DisenoVigas.ViewModels.ShellViewModel";
            _typeNameTable[110] = "DisenoVigas.Views.VigaAcoplePage";
            _typeNameTable[111] = "DisenoVigas.ViewModels.VigaAcopleViewModel";
            _typeNameTable[112] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[113] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";
            _typeNameTable[114] = "Int32";

            _typeTable = new global::System.Type[115];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[6] = typeof(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.ISeries>);
            _typeTable[7] = typeof(global::LiveChartsCore.Kernel.Sketches.IChart);
            _typeTable[8] = typeof(global::LiveChartsCore.Measure.Margin);
            _typeTable[9] = typeof(global::LiveChartsCore.Motion.MotionCanvas<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>);
            _typeTable[10] = typeof(global::LiveChartsCore.VisualElements.VisualElement<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>);
            _typeTable[11] = typeof(global::LiveChartsCore.Kernel.ChartElement<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>);
            _typeTable[12] = typeof(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis>);
            _typeTable[13] = typeof(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Section<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>);
            _typeTable[14] = typeof(global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.ChartElement<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>);
            _typeTable[15] = typeof(global::LiveChartsCore.DrawMarginFrame<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>);
            _typeTable[16] = typeof(global::LiveChartsCore.Measure.ZoomAndPanMode);
            _typeTable[17] = typeof(global::System.Enum);
            _typeTable[18] = typeof(global::System.ValueType);
            _typeTable[19] = typeof(global::System.Double);
            _typeTable[20] = typeof(global::LiveChartsCore.Measure.TooltipFindingStrategy);
            _typeTable[21] = typeof(global::System.TimeSpan);
            _typeTable[22] = typeof(global::System.Func<global::System.Single, global::System.Single>);
            _typeTable[23] = typeof(global::System.MulticastDelegate);
            _typeTable[24] = typeof(global::System.Delegate);
            _typeTable[25] = typeof(global::LiveChartsCore.Measure.LegendPosition);
            _typeTable[26] = typeof(global::LiveChartsCore.Drawing.IPaint<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>);
            _typeTable[27] = typeof(global::System.Nullable<global::System.Double>);
            _typeTable[28] = typeof(global::LiveChartsCore.Kernel.Sketches.IChartLegend<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>);
            _typeTable[29] = typeof(global::LiveChartsCore.Measure.TooltipPosition);
            _typeTable[30] = typeof(global::LiveChartsCore.Kernel.Sketches.IChartTooltip<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>);
            _typeTable[31] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[32] = typeof(global::DisenoVigas.Controls.GraphicControl);
            _typeTable[33] = typeof(global::WinUIEx.WindowEx);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[35] = typeof(global::System.String);
            _typeTable[36] = typeof(global::Microsoft.UI.Windowing.AppWindow);
            _typeTable[37] = typeof(global::WinUIEx.Icon);
            _typeTable[38] = typeof(global::WinUIEx.WindowState);
            _typeTable[39] = typeof(global::Microsoft.UI.Windowing.AppWindowPresenter);
            _typeTable[40] = typeof(global::Microsoft.UI.Windowing.AppWindowPresenterKind);
#pragma warning disable 0618  //   Warning on Deprecated usage
            _typeTable[41] = typeof(global::WinUIEx.SystemBackdrop);
#pragma warning restore 0618
            _typeTable[42] = typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop);
            _typeTable[43] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[44] = typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind);
            _typeTable[45] = typeof(global::DisenoVigas.MainWindow);
            _typeTable[46] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[47] = typeof(global::Microsoft.UI.Xaml.CornerRadius);
            _typeTable[48] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollView);
            _typeTable[49] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[50] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[51] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode);
            _typeTable[53] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation);
            _typeTable[54] = typeof(global::Microsoft.UI.Composition.CompositionPropertySet);
            _typeTable[55] = typeof(global::Microsoft.UI.Composition.CompositionObject);
            _typeTable[56] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility);
            _typeTable[57] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingChainMode);
            _typeTable[58] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingRailMode);
            _typeTable[59] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds);
            _typeTable[60] = typeof(global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter);
            _typeTable[61] = typeof(global::Microsoft.UI.Xaml.FrameworkElement);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState);
            _typeTable[63] = typeof(global::System.Single);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode);
            _typeTable[65] = typeof(global::DisenoVigas.Views.DisenoPage);
            _typeTable[66] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[67] = typeof(global::DisenoVigas.ViewModels.DisenoViewModel);
            _typeTable[68] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient);
            _typeTable[69] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableObject);
            _typeTable[70] = typeof(global::DisenoVigas.Views.DisenoRevisionPage);
            _typeTable[71] = typeof(global::DisenoVigas.ViewModels.DisenoRevisionViewModel);
            _typeTable[72] = typeof(global::DisenoVigas.Views.MainPage);
            _typeTable[73] = typeof(global::DisenoVigas.ViewModels.MainViewModel);
            _typeTable[74] = typeof(global::DisenoVigas.Views.RevisionPage);
            _typeTable[75] = typeof(global::DisenoVigas.ViewModels.RevisionViewModel);
            _typeTable[76] = typeof(global::DisenoVigas.Helpers.EnumToBooleanConverter);
            _typeTable[77] = typeof(global::DisenoVigas.Views.SettingsPage);
            _typeTable[78] = typeof(global::DisenoVigas.ViewModels.SettingsViewModel);
            _typeTable[79] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[80] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[81] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[82] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[83] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[84] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[85] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[86] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[87] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[88] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[89] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[90] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[91] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[92] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[93] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[94] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[95] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[96] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[97] = typeof(global::Microsoft.UI.Xaml.DependencyObjectCollection);
            _typeTable[98] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[99] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[100] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[101] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[102] = typeof(global::DisenoVigas.Helpers.NavigationHelper);
            _typeTable[103] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemHeader);
            _typeTable[104] = typeof(global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior);
            _typeTable[105] = typeof(global::Microsoft.Xaml.Interactivity.Behavior<global::Microsoft.UI.Xaml.Controls.NavigationView>);
            _typeTable[106] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[107] = typeof(global::DisenoVigas.Behaviors.NavigationViewHeaderMode);
            _typeTable[108] = typeof(global::DisenoVigas.Views.ShellPage);
            _typeTable[109] = typeof(global::DisenoVigas.ViewModels.ShellViewModel);
            _typeTable[110] = typeof(global::DisenoVigas.Views.VigaAcoplePage);
            _typeTable[111] = typeof(global::DisenoVigas.ViewModels.VigaAcopleViewModel);
            _typeTable[112] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[113] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
            _typeTable[114] = typeof(global::System.Int32);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_CartesianChart() { return new global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart(); }
        private object Activate_8_Margin() { return new global::LiveChartsCore.Measure.Margin(); }
        private object Activate_9_MotionCanvas() { return new global::LiveChartsCore.Motion.MotionCanvas<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>(); }
        private object Activate_32_GraphicControl() { return new global::DisenoVigas.Controls.GraphicControl(); }
        private object Activate_33_WindowEx() { return new global::WinUIEx.WindowEx(); }
        private object Activate_42_MicaBackdrop() { return new global::Microsoft.UI.Xaml.Media.MicaBackdrop(); }
        private object Activate_45_MainWindow() { return new global::DisenoVigas.MainWindow(); }
        private object Activate_48_ScrollView() { return new global::Microsoft.UI.Xaml.Controls.ScrollView(); }
        private object Activate_60_ScrollPresenter() { return new global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter(); }
        private object Activate_65_DisenoPage() { return new global::DisenoVigas.Views.DisenoPage(); }
        private object Activate_67_DisenoViewModel() { return new global::DisenoVigas.ViewModels.DisenoViewModel(); }
        private object Activate_70_DisenoRevisionPage() { return new global::DisenoVigas.Views.DisenoRevisionPage(); }
        private object Activate_71_DisenoRevisionViewModel() { return new global::DisenoVigas.ViewModels.DisenoRevisionViewModel(); }
        private object Activate_72_MainPage() { return new global::DisenoVigas.Views.MainPage(); }
        private object Activate_73_MainViewModel() { return new global::DisenoVigas.ViewModels.MainViewModel(); }
        private object Activate_74_RevisionPage() { return new global::DisenoVigas.Views.RevisionPage(); }
        private object Activate_75_RevisionViewModel() { return new global::DisenoVigas.ViewModels.RevisionViewModel(); }
        private object Activate_76_EnumToBooleanConverter() { return new global::DisenoVigas.Helpers.EnumToBooleanConverter(); }
        private object Activate_77_SettingsPage() { return new global::DisenoVigas.Views.SettingsPage(); }
        private object Activate_79_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_93_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_96_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_98_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_101_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_102_NavigationHelper() { return new global::DisenoVigas.Helpers.NavigationHelper(); }
        private object Activate_103_NavigationViewItemHeader() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItemHeader(); }
        private object Activate_104_NavigationViewHeaderBehavior() { return new global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior(); }
        private object Activate_110_VigaAcoplePage() { return new global::DisenoVigas.Views.VigaAcoplePage(); }
        private object Activate_111_VigaAcopleViewModel() { return new global::DisenoVigas.ViewModels.VigaAcopleViewModel(); }
        private object Activate_112_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_82_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_96_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Microsoft.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_113_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  LiveChartsCore.SkiaSharpView.WinUI.CartesianChart
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_CartesianChart;
                userType.AddMemberName("Series");
                userType.AddMemberName("CoreChart");
                userType.AddMemberName("DrawMargin");
                userType.AddMemberName("CoreCanvas");
                userType.AddMemberName("SyncContext");
                userType.AddMemberName("Title");
                userType.AddMemberName("XAxes");
                userType.AddMemberName("YAxes");
                userType.AddMemberName("Sections");
                userType.AddMemberName("VisualElements");
                userType.AddMemberName("DrawMarginFrame");
                userType.AddMemberName("ZoomMode");
                userType.AddMemberName("ZoomingSpeed");
                userType.AddMemberName("TooltipFindingStrategy");
                userType.AddMemberName("AnimationsSpeed");
                userType.AddMemberName("EasingFunction");
                userType.AddMemberName("LegendPosition");
                userType.AddMemberName("LegendBackgroundPaint");
                userType.AddMemberName("LegendTextPaint");
                userType.AddMemberName("LegendTextSize");
                userType.AddMemberName("Legend");
                userType.AddMemberName("TooltipPosition");
                userType.AddMemberName("TooltipBackgroundPaint");
                userType.AddMemberName("TooltipTextPaint");
                userType.AddMemberName("TooltipTextSize");
                userType.AddMemberName("Tooltip");
                userType.AddMemberName("AutoUpdateEnabled");
                userType.AddMemberName("UpdaterThrottler");
                userType.AddMemberName("UpdateStartedCommand");
                userType.AddMemberName("PointerPressedCommand");
                userType.AddMemberName("PointerReleasedCommand");
                userType.AddMemberName("PointerMoveCommand");
                userType.AddMemberName("DataPointerDownCommand");
                userType.AddMemberName("ChartPointPointerDownCommand");
                userType.AddMemberName("VisualElementsPointerDownCommand");
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  System.Collections.Generic.IEnumerable`1<LiveChartsCore.ISeries>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  LiveChartsCore.Kernel.Sketches.IChart
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  LiveChartsCore.Measure.Margin
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  LiveChartsCore.Motion.MotionCanvas`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 10:   //  LiveChartsCore.VisualElements.VisualElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveChartsCore.Kernel.ChartElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  LiveChartsCore.Kernel.ChartElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 12:   //  System.Collections.Generic.IEnumerable`1<LiveChartsCore.Kernel.Sketches.ICartesianAxis>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  System.Collections.Generic.IEnumerable`1<LiveChartsCore.Section`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  System.Collections.Generic.IEnumerable`1<LiveChartsCore.Kernel.ChartElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  LiveChartsCore.DrawMarginFrame`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveChartsCore.Kernel.ChartElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 16:   //  LiveChartsCore.Measure.ZoomAndPanMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::LiveChartsCore.Measure.ZoomAndPanMode.None);
                userType.AddEnumValue("PanX", global::LiveChartsCore.Measure.ZoomAndPanMode.PanX);
                userType.AddEnumValue("PanY", global::LiveChartsCore.Measure.ZoomAndPanMode.PanY);
                userType.AddEnumValue("ZoomX", global::LiveChartsCore.Measure.ZoomAndPanMode.ZoomX);
                userType.AddEnumValue("X", global::LiveChartsCore.Measure.ZoomAndPanMode.X);
                userType.AddEnumValue("ZoomY", global::LiveChartsCore.Measure.ZoomAndPanMode.ZoomY);
                userType.AddEnumValue("Y", global::LiveChartsCore.Measure.ZoomAndPanMode.Y);
                userType.AddEnumValue("Both", global::LiveChartsCore.Measure.ZoomAndPanMode.Both);
                userType.AddEnumValue("InvertPanningPointerTrigger", global::LiveChartsCore.Measure.ZoomAndPanMode.InvertPanningPointerTrigger);
                xamlType = userType;
                break;

            case 17:   //  System.Enum
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 18:   //  System.ValueType
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 19:   //  Double
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  LiveChartsCore.Measure.TooltipFindingStrategy
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Automatic", global::LiveChartsCore.Measure.TooltipFindingStrategy.Automatic);
                userType.AddEnumValue("CompareAll", global::LiveChartsCore.Measure.TooltipFindingStrategy.CompareAll);
                userType.AddEnumValue("CompareOnlyX", global::LiveChartsCore.Measure.TooltipFindingStrategy.CompareOnlyX);
                userType.AddEnumValue("CompareOnlyY", global::LiveChartsCore.Measure.TooltipFindingStrategy.CompareOnlyY);
                userType.AddEnumValue("CompareAllTakeClosest", global::LiveChartsCore.Measure.TooltipFindingStrategy.CompareAllTakeClosest);
                userType.AddEnumValue("CompareOnlyXTakeClosest", global::LiveChartsCore.Measure.TooltipFindingStrategy.CompareOnlyXTakeClosest);
                userType.AddEnumValue("CompareOnlyYTakeClosest", global::LiveChartsCore.Measure.TooltipFindingStrategy.CompareOnlyYTakeClosest);
                xamlType = userType;
                break;

            case 21:   //  TimeSpan
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  System.Func`2<Single, Single>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  System.MulticastDelegate
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 24:   //  System.Delegate
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 25:   //  LiveChartsCore.Measure.LegendPosition
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Hidden", global::LiveChartsCore.Measure.LegendPosition.Hidden);
                userType.AddEnumValue("Top", global::LiveChartsCore.Measure.LegendPosition.Top);
                userType.AddEnumValue("Left", global::LiveChartsCore.Measure.LegendPosition.Left);
                userType.AddEnumValue("Right", global::LiveChartsCore.Measure.LegendPosition.Right);
                userType.AddEnumValue("Bottom", global::LiveChartsCore.Measure.LegendPosition.Bottom);
                xamlType = userType;
                break;

            case 26:   //  LiveChartsCore.Drawing.IPaint`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  System.Nullable`1<Double>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("Double"));
                userType.BoxInstance = userType.BoxType<global::System.Double>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  LiveChartsCore.Kernel.Sketches.IChartLegend`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  LiveChartsCore.Measure.TooltipPosition
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Hidden", global::LiveChartsCore.Measure.TooltipPosition.Hidden);
                userType.AddEnumValue("Auto", global::LiveChartsCore.Measure.TooltipPosition.Auto);
                userType.AddEnumValue("Top", global::LiveChartsCore.Measure.TooltipPosition.Top);
                userType.AddEnumValue("Bottom", global::LiveChartsCore.Measure.TooltipPosition.Bottom);
                userType.AddEnumValue("Left", global::LiveChartsCore.Measure.TooltipPosition.Left);
                userType.AddEnumValue("Right", global::LiveChartsCore.Measure.TooltipPosition.Right);
                userType.AddEnumValue("Center", global::LiveChartsCore.Measure.TooltipPosition.Center);
                xamlType = userType;
                break;

            case 30:   //  LiveChartsCore.Kernel.Sketches.IChartTooltip`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  System.Windows.Input.ICommand
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  DisenoVigas.Controls.GraphicControl
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_32_GraphicControl;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  WinUIEx.WindowEx
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_33_WindowEx;
                userType.SetContentPropertyName("WinUIEx.WindowEx.WindowContent");
                userType.AddMemberName("WindowContent");
                userType.AddMemberName("Width");
                userType.AddMemberName("Height");
                userType.AddMemberName("IsResizable");
                userType.AddMemberName("PersistenceId");
                userType.AddMemberName("AppWindow");
                userType.AddMemberName("TaskBarIcon");
                userType.AddMemberName("Title");
                userType.AddMemberName("IsTitleBarVisible");
                userType.AddMemberName("IsMinimizable");
                userType.AddMemberName("IsMaximizable");
                userType.AddMemberName("WindowState");
                userType.AddMemberName("IsShownInSwitchers");
                userType.AddMemberName("IsAlwaysOnTop");
                userType.AddMemberName("Presenter");
                userType.AddMemberName("PresenterKind");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("MinHeight");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MaxHeight");
                userType.AddMemberName("Backdrop");
                xamlType = userType;
                break;

            case 34:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  String
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  Microsoft.UI.Windowing.AppWindow
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 37:   //  WinUIEx.Icon
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CreateFromStringMethod = global::WinUIEx.Icon.FromFile;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 38:   //  WinUIEx.WindowState
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::WinUIEx.WindowState.Normal);
                userType.AddEnumValue("Minimized", global::WinUIEx.WindowState.Minimized);
                userType.AddEnumValue("Maximized", global::WinUIEx.WindowState.Maximized);
                xamlType = userType;
                break;

            case 39:   //  Microsoft.UI.Windowing.AppWindowPresenter
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  Microsoft.UI.Windowing.AppWindowPresenterKind
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Microsoft.UI.Windowing.AppWindowPresenterKind.Default);
                userType.AddEnumValue("CompactOverlay", global::Microsoft.UI.Windowing.AppWindowPresenterKind.CompactOverlay);
                userType.AddEnumValue("FullScreen", global::Microsoft.UI.Windowing.AppWindowPresenterKind.FullScreen);
                userType.AddEnumValue("Overlapped", global::Microsoft.UI.Windowing.AppWindowPresenterKind.Overlapped);
                xamlType = userType;
                break;

            case 41:   //  WinUIEx.SystemBackdrop
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  Microsoft.UI.Xaml.Media.MicaBackdrop
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_42_MicaBackdrop;
                userType.AddMemberName("Kind");
                xamlType = userType;
                break;

            case 43:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  Microsoft.UI.Composition.SystemBackdrops.MicaKind
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Base", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.Base);
                userType.AddEnumValue("BaseAlt", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.BaseAlt);
                xamlType = userType;
                break;

            case 45:   //  DisenoVigas.MainWindow
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinUIEx.WindowEx"));
                userType.Activator = Activate_45_MainWindow;
                userType.SetContentPropertyName("WinUIEx.WindowEx.WindowContent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("Left");
                userType.AddMemberName("Top");
                userType.AddMemberName("Right");
                userType.AddMemberName("Bottom");
                xamlType = userType;
                break;

            case 47:   //  Microsoft.UI.Xaml.CornerRadius
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("TopLeft");
                userType.AddMemberName("TopRight");
                userType.AddMemberName("BottomRight");
                userType.AddMemberName("BottomLeft");
                xamlType = userType;
                break;

            case 48:   //  Microsoft.UI.Xaml.Controls.ScrollView
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_48_ScrollView;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.ScrollView.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("ComputedHorizontalScrollBarVisibility");
                userType.AddMemberName("ComputedHorizontalScrollMode");
                userType.AddMemberName("ComputedVerticalScrollBarVisibility");
                userType.AddMemberName("ComputedVerticalScrollMode");
                userType.AddMemberName("ContentOrientation");
                userType.AddMemberName("CurrentAnchor");
                userType.AddMemberName("ExpressionAnimationSources");
                userType.AddMemberName("ExtentHeight");
                userType.AddMemberName("ExtentWidth");
                userType.AddMemberName("HorizontalAnchorRatio");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("HorizontalScrollChainMode");
                userType.AddMemberName("HorizontalScrollMode");
                userType.AddMemberName("HorizontalScrollRailMode");
                userType.AddMemberName("IgnoredInputKinds");
                userType.AddMemberName("MaxZoomFactor");
                userType.AddMemberName("MinZoomFactor");
                userType.AddMemberName("ScrollPresenter");
                userType.AddMemberName("ScrollableHeight");
                userType.AddMemberName("ScrollableWidth");
                userType.AddMemberName("State");
                userType.AddMemberName("VerticalAnchorRatio");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("VerticalScrollChainMode");
                userType.AddMemberName("VerticalScrollMode");
                userType.AddMemberName("VerticalScrollRailMode");
                userType.AddMemberName("ViewportHeight");
                userType.AddMemberName("ViewportWidth");
                userType.AddMemberName("ZoomChainMode");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ZoomMode");
                xamlType = userType;
                break;

            case 49:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Disabled);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode.Auto);
                xamlType = userType;
                break;

            case 53:   //  Microsoft.UI.Xaml.Controls.ScrollingContentOrientation
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Vertical", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Vertical);
                userType.AddEnumValue("Horizontal", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Horizontal);
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.None);
                userType.AddEnumValue("Both", global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation.Both);
                xamlType = userType;
                break;

            case 54:   //  Microsoft.UI.Composition.CompositionPropertySet
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Composition.CompositionObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 55:   //  Microsoft.UI.Composition.CompositionObject
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 56:   //  Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Auto);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Visible);
                userType.AddEnumValue("Hidden", global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility.Hidden);
                xamlType = userType;
                break;

            case 57:   //  Microsoft.UI.Xaml.Controls.ScrollingChainMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Auto);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.ScrollingChainMode.Never);
                xamlType = userType;
                break;

            case 58:   //  Microsoft.UI.Xaml.Controls.ScrollingRailMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingRailMode.Disabled);
                xamlType = userType;
                break;

            case 59:   //  Microsoft.UI.Xaml.Controls.ScrollingInputKinds
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.None);
                userType.AddEnumValue("Touch", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Touch);
                userType.AddEnumValue("Pen", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Pen);
                userType.AddEnumValue("MouseWheel", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.MouseWheel);
                userType.AddEnumValue("Keyboard", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Keyboard);
                userType.AddEnumValue("Gamepad", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.Gamepad);
                userType.AddEnumValue("All", global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds.All);
                xamlType = userType;
                break;

            case 60:   //  Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.FrameworkElement"));
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content");
                userType.AddMemberName("Content");
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  Microsoft.UI.Xaml.FrameworkElement
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 62:   //  Microsoft.UI.Xaml.Controls.ScrollingInteractionState
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Idle", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Idle);
                userType.AddEnumValue("Interaction", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Interaction);
                userType.AddEnumValue("Inertia", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Inertia);
                userType.AddEnumValue("Animation", global::Microsoft.UI.Xaml.Controls.ScrollingInteractionState.Animation);
                xamlType = userType;
                break;

            case 63:   //  Single
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Microsoft.UI.Xaml.Controls.ScrollingZoomMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Enabled);
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode.Disabled);
                xamlType = userType;
                break;

            case 65:   //  DisenoVigas.Views.DisenoPage
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_65_DisenoPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 66:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 67:   //  DisenoVigas.ViewModels.DisenoViewModel
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 68:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                xamlType = userType;
                break;

            case 69:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableObject
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 70:   //  DisenoVigas.Views.DisenoRevisionPage
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_70_DisenoRevisionPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 71:   //  DisenoVigas.ViewModels.DisenoRevisionViewModel
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 72:   //  DisenoVigas.Views.MainPage
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_72_MainPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  DisenoVigas.ViewModels.MainViewModel
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 74:   //  DisenoVigas.Views.RevisionPage
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_74_RevisionPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 75:   //  DisenoVigas.ViewModels.RevisionViewModel
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  DisenoVigas.Helpers.EnumToBooleanConverter
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_76_EnumToBooleanConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 77:   //  DisenoVigas.Views.SettingsPage
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_77_SettingsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 78:   //  DisenoVigas.ViewModels.SettingsViewModel
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 79:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_79_NavigationView;
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("Header");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 80:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 81:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 82:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_82_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 83:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 84:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 85:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 86:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 87:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 88:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 89:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 90:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 91:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 92:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 93:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 94:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 95:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 96:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_96_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 97:   //  Microsoft.UI.Xaml.DependencyObjectCollection
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 98:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_98_NavigationViewItem;
                userType.AddMemberName("Icon");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 99:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 100:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 101:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 102:   //  DisenoVigas.Helpers.NavigationHelper
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_102_NavigationHelper;
                userType.AddMemberName("NavigateTo");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemHeader
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_103_NavigationViewItemHeader;
                xamlType = userType;
                break;

            case 104:   //  DisenoVigas.Behaviors.NavigationViewHeaderBehavior
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior`1<Microsoft.UI.Xaml.Controls.NavigationView>"));
                userType.Activator = Activate_104_NavigationViewHeaderBehavior;
                userType.AddMemberName("DefaultHeader");
                userType.AddMemberName("DefaultHeaderTemplate");
                userType.AddMemberName("HeaderMode");
                userType.AddMemberName("HeaderContext");
                userType.AddMemberName("HeaderTemplate");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 105:   //  Microsoft.Xaml.Interactivity.Behavior`1<Microsoft.UI.Xaml.Controls.NavigationView>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 106:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 107:   //  DisenoVigas.Behaviors.NavigationViewHeaderMode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Always", global::DisenoVigas.Behaviors.NavigationViewHeaderMode.Always);
                userType.AddEnumValue("Never", global::DisenoVigas.Behaviors.NavigationViewHeaderMode.Never);
                userType.AddEnumValue("Minimal", global::DisenoVigas.Behaviors.NavigationViewHeaderMode.Minimal);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 108:   //  DisenoVigas.Views.ShellPage
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 109:   //  DisenoVigas.ViewModels.ShellViewModel
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 110:   //  DisenoVigas.Views.VigaAcoplePage
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_110_VigaAcoplePage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 111:   //  DisenoVigas.ViewModels.VigaAcopleViewModel
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableRecipient"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 112:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_112_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 113:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_113_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 114:   //  Int32
                xamlType = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::LiveChartsCore.SkiaSharpView.WinUI.LiveChartsCore_SkiaSharpView_WinUI_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_CartesianChart_Series(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.Series;
        }
        private void set_1_CartesianChart_Series(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.Series = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.ISeries>)Value;
        }
        private object get_2_CartesianChart_CoreChart(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.CoreChart;
        }
        private object get_3_CartesianChart_DrawMargin(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.DrawMargin;
        }
        private void set_3_CartesianChart_DrawMargin(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.DrawMargin = (global::LiveChartsCore.Measure.Margin)Value;
        }
        private object get_4_CartesianChart_CoreCanvas(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.CoreCanvas;
        }
        private object get_5_CartesianChart_SyncContext(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.SyncContext;
        }
        private void set_5_CartesianChart_SyncContext(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.SyncContext = (global::System.Object)Value;
        }
        private object get_6_CartesianChart_Title(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.Title;
        }
        private void set_6_CartesianChart_Title(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.Title = (global::LiveChartsCore.VisualElements.VisualElement<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_7_CartesianChart_XAxes(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.XAxes;
        }
        private void set_7_CartesianChart_XAxes(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.XAxes = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis>)Value;
        }
        private object get_8_CartesianChart_YAxes(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.YAxes;
        }
        private void set_8_CartesianChart_YAxes(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.YAxes = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.Sketches.ICartesianAxis>)Value;
        }
        private object get_9_CartesianChart_Sections(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.Sections;
        }
        private void set_9_CartesianChart_Sections(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.Sections = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Section<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>)Value;
        }
        private object get_10_CartesianChart_VisualElements(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.VisualElements;
        }
        private void set_10_CartesianChart_VisualElements(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.VisualElements = (global::System.Collections.Generic.IEnumerable<global::LiveChartsCore.Kernel.ChartElement<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>)Value;
        }
        private object get_11_CartesianChart_DrawMarginFrame(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.DrawMarginFrame;
        }
        private void set_11_CartesianChart_DrawMarginFrame(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.DrawMarginFrame = (global::LiveChartsCore.DrawMarginFrame<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_12_CartesianChart_ZoomMode(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.ZoomMode;
        }
        private void set_12_CartesianChart_ZoomMode(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.ZoomMode = (global::LiveChartsCore.Measure.ZoomAndPanMode)Value;
        }
        private object get_13_CartesianChart_ZoomingSpeed(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.ZoomingSpeed;
        }
        private void set_13_CartesianChart_ZoomingSpeed(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.ZoomingSpeed = (global::System.Double)Value;
        }
        private object get_14_CartesianChart_TooltipFindingStrategy(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.TooltipFindingStrategy;
        }
        private void set_14_CartesianChart_TooltipFindingStrategy(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.TooltipFindingStrategy = (global::LiveChartsCore.Measure.TooltipFindingStrategy)Value;
        }
        private object get_15_CartesianChart_AnimationsSpeed(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.AnimationsSpeed;
        }
        private void set_15_CartesianChart_AnimationsSpeed(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.AnimationsSpeed = (global::System.TimeSpan)Value;
        }
        private object get_16_CartesianChart_EasingFunction(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.EasingFunction;
        }
        private void set_16_CartesianChart_EasingFunction(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.EasingFunction = (global::System.Func<global::System.Single, global::System.Single>)Value;
        }
        private object get_17_CartesianChart_LegendPosition(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.LegendPosition;
        }
        private void set_17_CartesianChart_LegendPosition(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.LegendPosition = (global::LiveChartsCore.Measure.LegendPosition)Value;
        }
        private object get_18_CartesianChart_LegendBackgroundPaint(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.LegendBackgroundPaint;
        }
        private void set_18_CartesianChart_LegendBackgroundPaint(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.LegendBackgroundPaint = (global::LiveChartsCore.Drawing.IPaint<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_19_CartesianChart_LegendTextPaint(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.LegendTextPaint;
        }
        private void set_19_CartesianChart_LegendTextPaint(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.LegendTextPaint = (global::LiveChartsCore.Drawing.IPaint<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_20_CartesianChart_LegendTextSize(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.LegendTextSize;
        }
        private void set_20_CartesianChart_LegendTextSize(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.LegendTextSize = (global::System.Nullable<global::System.Double>)Value;
        }
        private object get_21_CartesianChart_Legend(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.Legend;
        }
        private void set_21_CartesianChart_Legend(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.Legend = (global::LiveChartsCore.Kernel.Sketches.IChartLegend<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_22_CartesianChart_TooltipPosition(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.TooltipPosition;
        }
        private void set_22_CartesianChart_TooltipPosition(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.TooltipPosition = (global::LiveChartsCore.Measure.TooltipPosition)Value;
        }
        private object get_23_CartesianChart_TooltipBackgroundPaint(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.TooltipBackgroundPaint;
        }
        private void set_23_CartesianChart_TooltipBackgroundPaint(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.TooltipBackgroundPaint = (global::LiveChartsCore.Drawing.IPaint<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_24_CartesianChart_TooltipTextPaint(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.TooltipTextPaint;
        }
        private void set_24_CartesianChart_TooltipTextPaint(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.TooltipTextPaint = (global::LiveChartsCore.Drawing.IPaint<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_25_CartesianChart_TooltipTextSize(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.TooltipTextSize;
        }
        private void set_25_CartesianChart_TooltipTextSize(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.TooltipTextSize = (global::System.Nullable<global::System.Double>)Value;
        }
        private object get_26_CartesianChart_Tooltip(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.Tooltip;
        }
        private void set_26_CartesianChart_Tooltip(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.Tooltip = (global::LiveChartsCore.Kernel.Sketches.IChartTooltip<global::LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>)Value;
        }
        private object get_27_CartesianChart_AutoUpdateEnabled(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.AutoUpdateEnabled;
        }
        private void set_27_CartesianChart_AutoUpdateEnabled(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.AutoUpdateEnabled = (global::System.Boolean)Value;
        }
        private object get_28_CartesianChart_UpdaterThrottler(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.UpdaterThrottler;
        }
        private void set_28_CartesianChart_UpdaterThrottler(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.UpdaterThrottler = (global::System.TimeSpan)Value;
        }
        private object get_29_CartesianChart_UpdateStartedCommand(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.UpdateStartedCommand;
        }
        private void set_29_CartesianChart_UpdateStartedCommand(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.UpdateStartedCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_30_CartesianChart_PointerPressedCommand(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.PointerPressedCommand;
        }
        private void set_30_CartesianChart_PointerPressedCommand(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.PointerPressedCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_31_CartesianChart_PointerReleasedCommand(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.PointerReleasedCommand;
        }
        private void set_31_CartesianChart_PointerReleasedCommand(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.PointerReleasedCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_32_CartesianChart_PointerMoveCommand(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.PointerMoveCommand;
        }
        private void set_32_CartesianChart_PointerMoveCommand(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.PointerMoveCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_33_CartesianChart_DataPointerDownCommand(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.DataPointerDownCommand;
        }
        private void set_33_CartesianChart_DataPointerDownCommand(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.DataPointerDownCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_34_CartesianChart_ChartPointPointerDownCommand(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.ChartPointPointerDownCommand;
        }
        private void set_34_CartesianChart_ChartPointPointerDownCommand(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.ChartPointPointerDownCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_35_CartesianChart_VisualElementsPointerDownCommand(object instance)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            return that.VisualElementsPointerDownCommand;
        }
        private void set_35_CartesianChart_VisualElementsPointerDownCommand(object instance, object Value)
        {
            var that = (global::LiveChartsCore.SkiaSharpView.WinUI.CartesianChart)instance;
            that.VisualElementsPointerDownCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_36_WindowEx_WindowContent(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.WindowContent;
        }
        private void set_36_WindowEx_WindowContent(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.WindowContent = (global::System.Object)Value;
        }
        private object get_37_WindowEx_Width(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Width;
        }
        private void set_37_WindowEx_Width(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Width = (global::System.Double)Value;
        }
        private object get_38_WindowEx_Height(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Height;
        }
        private void set_38_WindowEx_Height(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Height = (global::System.Double)Value;
        }
        private object get_39_WindowEx_IsResizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsResizable;
        }
        private void set_39_WindowEx_IsResizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsResizable = (global::System.Boolean)Value;
        }
        private object get_40_WindowEx_PersistenceId(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.PersistenceId;
        }
        private void set_40_WindowEx_PersistenceId(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.PersistenceId = (global::System.String)Value;
        }
        private object get_41_WindowEx_AppWindow(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.AppWindow;
        }
        private object get_42_WindowEx_TaskBarIcon(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.TaskBarIcon;
        }
        private void set_42_WindowEx_TaskBarIcon(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.TaskBarIcon = (global::WinUIEx.Icon)Value;
        }
        private object get_43_WindowEx_Title(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Title;
        }
        private void set_43_WindowEx_Title(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_44_WindowEx_IsTitleBarVisible(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsTitleBarVisible;
        }
        private void set_44_WindowEx_IsTitleBarVisible(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsTitleBarVisible = (global::System.Boolean)Value;
        }
        private object get_45_WindowEx_IsMinimizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsMinimizable;
        }
        private void set_45_WindowEx_IsMinimizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsMinimizable = (global::System.Boolean)Value;
        }
        private object get_46_WindowEx_IsMaximizable(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsMaximizable;
        }
        private void set_46_WindowEx_IsMaximizable(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsMaximizable = (global::System.Boolean)Value;
        }
        private object get_47_WindowEx_WindowState(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.WindowState;
        }
        private void set_47_WindowEx_WindowState(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.WindowState = (global::WinUIEx.WindowState)Value;
        }
        private object get_48_WindowEx_IsShownInSwitchers(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsShownInSwitchers;
        }
        private void set_48_WindowEx_IsShownInSwitchers(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsShownInSwitchers = (global::System.Boolean)Value;
        }
        private object get_49_WindowEx_IsAlwaysOnTop(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.IsAlwaysOnTop;
        }
        private void set_49_WindowEx_IsAlwaysOnTop(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.IsAlwaysOnTop = (global::System.Boolean)Value;
        }
        private object get_50_WindowEx_Presenter(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Presenter;
        }
        private object get_51_WindowEx_PresenterKind(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.PresenterKind;
        }
        private void set_51_WindowEx_PresenterKind(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.PresenterKind = (global::Microsoft.UI.Windowing.AppWindowPresenterKind)Value;
        }
        private object get_52_WindowEx_MinWidth(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MinWidth;
        }
        private void set_52_WindowEx_MinWidth(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_53_WindowEx_MinHeight(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MinHeight;
        }
        private void set_53_WindowEx_MinHeight(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MinHeight = (global::System.Double)Value;
        }
        private object get_54_WindowEx_MaxWidth(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MaxWidth;
        }
        private void set_54_WindowEx_MaxWidth(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_55_WindowEx_MaxHeight(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.MaxHeight;
        }
        private void set_55_WindowEx_MaxHeight(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.MaxHeight = (global::System.Double)Value;
        }
#pragma warning disable 0618  //   Warning on Deprecated usage
        private object get_56_WindowEx_Backdrop(object instance)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            return that.Backdrop;
        }
        private void set_56_WindowEx_Backdrop(object instance, object Value)
        {
            var that = (global::WinUIEx.WindowEx)instance;
            that.Backdrop = (global::WinUIEx.SystemBackdrop)Value;
        }
#pragma warning restore 0618
        private object get_57_MicaBackdrop_Kind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            return that.Kind;
        }
        private void set_57_MicaBackdrop_Kind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            that.Kind = (global::Microsoft.UI.Composition.SystemBackdrops.MicaKind)Value;
        }
        private object get_58_Thickness_Left(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Left;
        }
        private void set_58_Thickness_Left(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Left = (global::System.Double)Value;
        }
        private object get_59_Thickness_Top(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Top;
        }
        private void set_59_Thickness_Top(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Top = (global::System.Double)Value;
        }
        private object get_60_Thickness_Right(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Right;
        }
        private void set_60_Thickness_Right(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Right = (global::System.Double)Value;
        }
        private object get_61_Thickness_Bottom(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Bottom;
        }
        private void set_61_Thickness_Bottom(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Bottom = (global::System.Double)Value;
        }
        private object get_62_CornerRadius_TopLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.TopLeft;
        }
        private void set_62_CornerRadius_TopLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.TopLeft = (global::System.Double)Value;
        }
        private object get_63_CornerRadius_TopRight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.TopRight;
        }
        private void set_63_CornerRadius_TopRight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.TopRight = (global::System.Double)Value;
        }
        private object get_64_CornerRadius_BottomRight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.BottomRight;
        }
        private void set_64_CornerRadius_BottomRight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.BottomRight = (global::System.Double)Value;
        }
        private object get_65_CornerRadius_BottomLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.BottomLeft;
        }
        private void set_65_CornerRadius_BottomLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.BottomLeft = (global::System.Double)Value;
        }
        private object get_66_ScrollView_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.Content;
        }
        private void set_66_ScrollView_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_67_ScrollView_ComputedHorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollBarVisibility;
        }
        private object get_68_ScrollView_ComputedHorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedHorizontalScrollMode;
        }
        private object get_69_ScrollView_ComputedVerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollBarVisibility;
        }
        private object get_70_ScrollView_ComputedVerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ComputedVerticalScrollMode;
        }
        private object get_71_ScrollView_ContentOrientation(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ContentOrientation;
        }
        private void set_71_ScrollView_ContentOrientation(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ContentOrientation = (global::Microsoft.UI.Xaml.Controls.ScrollingContentOrientation)Value;
        }
        private object get_72_ScrollView_CurrentAnchor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.CurrentAnchor;
        }
        private object get_73_ScrollView_ExpressionAnimationSources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExpressionAnimationSources;
        }
        private object get_74_ScrollView_ExtentHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentHeight;
        }
        private object get_75_ScrollView_ExtentWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ExtentWidth;
        }
        private object get_76_ScrollView_HorizontalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalAnchorRatio;
        }
        private void set_76_ScrollView_HorizontalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalAnchorRatio = (global::System.Double)Value;
        }
        private object get_77_ScrollView_HorizontalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalOffset;
        }
        private object get_78_ScrollView_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_78_ScrollView_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_79_ScrollView_HorizontalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollChainMode;
        }
        private void set_79_ScrollView_HorizontalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_80_ScrollView_HorizontalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollMode;
        }
        private void set_80_ScrollView_HorizontalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_81_ScrollView_HorizontalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.HorizontalScrollRailMode;
        }
        private void set_81_ScrollView_HorizontalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.HorizontalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_82_ScrollView_IgnoredInputKinds(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.IgnoredInputKinds;
        }
        private void set_82_ScrollView_IgnoredInputKinds(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.IgnoredInputKinds = (global::Microsoft.UI.Xaml.Controls.ScrollingInputKinds)Value;
        }
        private object get_83_ScrollView_MaxZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MaxZoomFactor;
        }
        private void set_83_ScrollView_MaxZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MaxZoomFactor = (global::System.Double)Value;
        }
        private object get_84_ScrollView_MinZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.MinZoomFactor;
        }
        private void set_84_ScrollView_MinZoomFactor(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.MinZoomFactor = (global::System.Double)Value;
        }
        private object get_85_ScrollView_ScrollPresenter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollPresenter;
        }
        private object get_86_ScrollPresenter_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            return that.Content;
        }
        private void set_86_ScrollPresenter_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter)instance;
            that.Content = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_87_ScrollView_ScrollableHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableHeight;
        }
        private object get_88_ScrollView_ScrollableWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ScrollableWidth;
        }
        private object get_89_ScrollView_State(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.State;
        }
        private object get_90_ScrollView_VerticalAnchorRatio(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalAnchorRatio;
        }
        private void set_90_ScrollView_VerticalAnchorRatio(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalAnchorRatio = (global::System.Double)Value;
        }
        private object get_91_ScrollView_VerticalOffset(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalOffset;
        }
        private object get_92_ScrollView_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_92_ScrollView_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility)Value;
        }
        private object get_93_ScrollView_VerticalScrollChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollChainMode;
        }
        private void set_93_ScrollView_VerticalScrollChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_94_ScrollView_VerticalScrollMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollMode;
        }
        private void set_94_ScrollView_VerticalScrollMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollMode = (global::Microsoft.UI.Xaml.Controls.ScrollingScrollMode)Value;
        }
        private object get_95_ScrollView_VerticalScrollRailMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.VerticalScrollRailMode;
        }
        private void set_95_ScrollView_VerticalScrollRailMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.VerticalScrollRailMode = (global::Microsoft.UI.Xaml.Controls.ScrollingRailMode)Value;
        }
        private object get_96_ScrollView_ViewportHeight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportHeight;
        }
        private object get_97_ScrollView_ViewportWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ViewportWidth;
        }
        private object get_98_ScrollView_ZoomChainMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomChainMode;
        }
        private void set_98_ScrollView_ZoomChainMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomChainMode = (global::Microsoft.UI.Xaml.Controls.ScrollingChainMode)Value;
        }
        private object get_99_ScrollView_ZoomFactor(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomFactor;
        }
        private object get_100_ScrollView_ZoomMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            return that.ZoomMode;
        }
        private void set_100_ScrollView_ZoomMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ScrollView)instance;
            that.ZoomMode = (global::Microsoft.UI.Xaml.Controls.ScrollingZoomMode)Value;
        }
        private object get_101_DisenoPage_ViewModel(object instance)
        {
            var that = (global::DisenoVigas.Views.DisenoPage)instance;
            return that.ViewModel;
        }
        private object get_102_DisenoRevisionPage_ViewModel(object instance)
        {
            var that = (global::DisenoVigas.Views.DisenoRevisionPage)instance;
            return that.ViewModel;
        }
        private object get_103_MainPage_ViewModel(object instance)
        {
            var that = (global::DisenoVigas.Views.MainPage)instance;
            return that.ViewModel;
        }
        private object get_104_RevisionPage_ViewModel(object instance)
        {
            var that = (global::DisenoVigas.Views.RevisionPage)instance;
            return that.ViewModel;
        }
        private object get_105_SettingsPage_ViewModel(object instance)
        {
            var that = (global::DisenoVigas.Views.SettingsPage)instance;
            return that.ViewModel;
        }
        private object get_106_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_106_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_107_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_107_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_108_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_108_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_109_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_109_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_110_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_110_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_111_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_111_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_112_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_112_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_113_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_114_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_114_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_115_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_115_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_116_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_116_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_117_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_117_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_118_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_118_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_119_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_119_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_120_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_121_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_122_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_122_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_123_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_123_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_124_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_124_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_125_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_125_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_126_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_126_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_127_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_127_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_128_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_128_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_129_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_129_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_130_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_130_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_131_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_131_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_132_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_132_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_133_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_133_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_134_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_134_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_135_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_135_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_136_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_136_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_137_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_137_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_138_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_138_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_139_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_139_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_140_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_141_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_141_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_142_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_143_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Microsoft.UI.Xaml.DependencyObject)instance);
        }
        private void set_143_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Microsoft.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_144_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_144_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_145_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_146_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_146_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_147_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_147_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_148_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_148_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_149_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_149_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_150_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_151_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_151_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_152_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_152_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_153_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_153_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_154_NavigationHelper_NavigateTo(object instance)
        {
            return global::DisenoVigas.Helpers.NavigationHelper.GetNavigateTo((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance);
        }
        private void set_154_NavigationHelper_NavigateTo(object instance, object Value)
        {
            global::DisenoVigas.Helpers.NavigationHelper.SetNavigateTo((global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance, (global::System.String)Value);
        }
        private object get_155_NavigationViewHeaderBehavior_DefaultHeader(object instance)
        {
            var that = (global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior)instance;
            return that.DefaultHeader;
        }
        private void set_155_NavigationViewHeaderBehavior_DefaultHeader(object instance, object Value)
        {
            var that = (global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior)instance;
            that.DefaultHeader = (global::System.Object)Value;
        }
        private object get_156_NavigationViewHeaderBehavior_DefaultHeaderTemplate(object instance)
        {
            var that = (global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior)instance;
            return that.DefaultHeaderTemplate;
        }
        private void set_156_NavigationViewHeaderBehavior_DefaultHeaderTemplate(object instance, object Value)
        {
            var that = (global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior)instance;
            that.DefaultHeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_157_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior<global::Microsoft.UI.Xaml.Controls.NavigationView>)instance;
            return that.AssociatedObject;
        }
        private object get_158_NavigationViewHeaderBehavior_HeaderMode(object instance)
        {
            return global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior.GetHeaderMode((global::Microsoft.UI.Xaml.Controls.Page)instance);
        }
        private void set_158_NavigationViewHeaderBehavior_HeaderMode(object instance, object Value)
        {
            global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior.SetHeaderMode((global::Microsoft.UI.Xaml.Controls.Page)instance, (global::DisenoVigas.Behaviors.NavigationViewHeaderMode)Value);
        }
        private object get_159_NavigationViewHeaderBehavior_HeaderContext(object instance)
        {
            return global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior.GetHeaderContext((global::Microsoft.UI.Xaml.Controls.Page)instance);
        }
        private void set_159_NavigationViewHeaderBehavior_HeaderContext(object instance, object Value)
        {
            global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior.SetHeaderContext((global::Microsoft.UI.Xaml.Controls.Page)instance, (global::System.Object)Value);
        }
        private object get_160_NavigationViewHeaderBehavior_HeaderTemplate(object instance)
        {
            return global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior.GetHeaderTemplate((global::Microsoft.UI.Xaml.Controls.Page)instance);
        }
        private void set_160_NavigationViewHeaderBehavior_HeaderTemplate(object instance, object Value)
        {
            global::DisenoVigas.Behaviors.NavigationViewHeaderBehavior.SetHeaderTemplate((global::Microsoft.UI.Xaml.Controls.Page)instance, (global::Microsoft.UI.Xaml.DataTemplate)Value);
        }
        private object get_161_ShellPage_ViewModel(object instance)
        {
            var that = (global::DisenoVigas.Views.ShellPage)instance;
            return that.ViewModel;
        }
        private object get_162_VigaAcoplePage_ViewModel(object instance)
        {
            var that = (global::DisenoVigas.Views.VigaAcoplePage)instance;
            return that.ViewModel;
        }
        private object get_163_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_164_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_164_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_165_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_166_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_167_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_167_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_168_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_168_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_169_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember xamlMember = null;
            global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.Series":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Series", "System.Collections.Generic.IEnumerable`1<LiveChartsCore.ISeries>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_CartesianChart_Series;
                xamlMember.Setter = set_1_CartesianChart_Series;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.CoreChart":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "CoreChart", "LiveChartsCore.Kernel.Sketches.IChart");
                xamlMember.Getter = get_2_CartesianChart_CoreChart;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.DrawMargin":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "DrawMargin", "LiveChartsCore.Measure.Margin");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_CartesianChart_DrawMargin;
                xamlMember.Setter = set_3_CartesianChart_DrawMargin;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.CoreCanvas":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "CoreCanvas", "LiveChartsCore.Motion.MotionCanvas`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.Getter = get_4_CartesianChart_CoreCanvas;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.SyncContext":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "SyncContext", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_CartesianChart_SyncContext;
                xamlMember.Setter = set_5_CartesianChart_SyncContext;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.Title":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Title", "LiveChartsCore.VisualElements.VisualElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_CartesianChart_Title;
                xamlMember.Setter = set_6_CartesianChart_Title;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.XAxes":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "XAxes", "System.Collections.Generic.IEnumerable`1<LiveChartsCore.Kernel.Sketches.ICartesianAxis>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_CartesianChart_XAxes;
                xamlMember.Setter = set_7_CartesianChart_XAxes;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.YAxes":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "YAxes", "System.Collections.Generic.IEnumerable`1<LiveChartsCore.Kernel.Sketches.ICartesianAxis>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_CartesianChart_YAxes;
                xamlMember.Setter = set_8_CartesianChart_YAxes;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.Sections":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Sections", "System.Collections.Generic.IEnumerable`1<LiveChartsCore.Section`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_CartesianChart_Sections;
                xamlMember.Setter = set_9_CartesianChart_Sections;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.VisualElements":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VisualElements", "System.Collections.Generic.IEnumerable`1<LiveChartsCore.Kernel.ChartElement`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_CartesianChart_VisualElements;
                xamlMember.Setter = set_10_CartesianChart_VisualElements;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.DrawMarginFrame":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "DrawMarginFrame", "LiveChartsCore.DrawMarginFrame`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_CartesianChart_DrawMarginFrame;
                xamlMember.Setter = set_11_CartesianChart_DrawMarginFrame;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.ZoomMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ZoomMode", "LiveChartsCore.Measure.ZoomAndPanMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_CartesianChart_ZoomMode;
                xamlMember.Setter = set_12_CartesianChart_ZoomMode;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.ZoomingSpeed":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ZoomingSpeed", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_CartesianChart_ZoomingSpeed;
                xamlMember.Setter = set_13_CartesianChart_ZoomingSpeed;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.TooltipFindingStrategy":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TooltipFindingStrategy", "LiveChartsCore.Measure.TooltipFindingStrategy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_CartesianChart_TooltipFindingStrategy;
                xamlMember.Setter = set_14_CartesianChart_TooltipFindingStrategy;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.AnimationsSpeed":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "AnimationsSpeed", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_CartesianChart_AnimationsSpeed;
                xamlMember.Setter = set_15_CartesianChart_AnimationsSpeed;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.EasingFunction":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "EasingFunction", "System.Func`2<Single, Single>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_CartesianChart_EasingFunction;
                xamlMember.Setter = set_16_CartesianChart_EasingFunction;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.LegendPosition":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "LegendPosition", "LiveChartsCore.Measure.LegendPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_CartesianChart_LegendPosition;
                xamlMember.Setter = set_17_CartesianChart_LegendPosition;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.LegendBackgroundPaint":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "LegendBackgroundPaint", "LiveChartsCore.Drawing.IPaint`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_CartesianChart_LegendBackgroundPaint;
                xamlMember.Setter = set_18_CartesianChart_LegendBackgroundPaint;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.LegendTextPaint":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "LegendTextPaint", "LiveChartsCore.Drawing.IPaint`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_CartesianChart_LegendTextPaint;
                xamlMember.Setter = set_19_CartesianChart_LegendTextPaint;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.LegendTextSize":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "LegendTextSize", "System.Nullable`1<Double>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_CartesianChart_LegendTextSize;
                xamlMember.Setter = set_20_CartesianChart_LegendTextSize;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.Legend":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Legend", "LiveChartsCore.Kernel.Sketches.IChartLegend`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.Getter = get_21_CartesianChart_Legend;
                xamlMember.Setter = set_21_CartesianChart_Legend;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.TooltipPosition":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TooltipPosition", "LiveChartsCore.Measure.TooltipPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_CartesianChart_TooltipPosition;
                xamlMember.Setter = set_22_CartesianChart_TooltipPosition;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.TooltipBackgroundPaint":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TooltipBackgroundPaint", "LiveChartsCore.Drawing.IPaint`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_CartesianChart_TooltipBackgroundPaint;
                xamlMember.Setter = set_23_CartesianChart_TooltipBackgroundPaint;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.TooltipTextPaint":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TooltipTextPaint", "LiveChartsCore.Drawing.IPaint`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_CartesianChart_TooltipTextPaint;
                xamlMember.Setter = set_24_CartesianChart_TooltipTextPaint;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.TooltipTextSize":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TooltipTextSize", "System.Nullable`1<Double>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_CartesianChart_TooltipTextSize;
                xamlMember.Setter = set_25_CartesianChart_TooltipTextSize;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.Tooltip":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Tooltip", "LiveChartsCore.Kernel.Sketches.IChartTooltip`1<LiveChartsCore.SkiaSharpView.Drawing.SkiaSharpDrawingContext>");
                xamlMember.Getter = get_26_CartesianChart_Tooltip;
                xamlMember.Setter = set_26_CartesianChart_Tooltip;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.AutoUpdateEnabled":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "AutoUpdateEnabled", "Boolean");
                xamlMember.Getter = get_27_CartesianChart_AutoUpdateEnabled;
                xamlMember.Setter = set_27_CartesianChart_AutoUpdateEnabled;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.UpdaterThrottler":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "UpdaterThrottler", "TimeSpan");
                xamlMember.Getter = get_28_CartesianChart_UpdaterThrottler;
                xamlMember.Setter = set_28_CartesianChart_UpdaterThrottler;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.UpdateStartedCommand":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "UpdateStartedCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_CartesianChart_UpdateStartedCommand;
                xamlMember.Setter = set_29_CartesianChart_UpdateStartedCommand;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.PointerPressedCommand":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PointerPressedCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_CartesianChart_PointerPressedCommand;
                xamlMember.Setter = set_30_CartesianChart_PointerPressedCommand;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.PointerReleasedCommand":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PointerReleasedCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_CartesianChart_PointerReleasedCommand;
                xamlMember.Setter = set_31_CartesianChart_PointerReleasedCommand;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.PointerMoveCommand":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PointerMoveCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_CartesianChart_PointerMoveCommand;
                xamlMember.Setter = set_32_CartesianChart_PointerMoveCommand;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.DataPointerDownCommand":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "DataPointerDownCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_CartesianChart_DataPointerDownCommand;
                xamlMember.Setter = set_33_CartesianChart_DataPointerDownCommand;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.ChartPointPointerDownCommand":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ChartPointPointerDownCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_CartesianChart_ChartPointPointerDownCommand;
                xamlMember.Setter = set_34_CartesianChart_ChartPointPointerDownCommand;
                break;
            case "LiveChartsCore.SkiaSharpView.WinUI.CartesianChart.VisualElementsPointerDownCommand":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveChartsCore.SkiaSharpView.WinUI.CartesianChart");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VisualElementsPointerDownCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_CartesianChart_VisualElementsPointerDownCommand;
                xamlMember.Setter = set_35_CartesianChart_VisualElementsPointerDownCommand;
                break;
            case "WinUIEx.WindowEx.WindowContent":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "WindowContent", "Object");
                xamlMember.Getter = get_36_WindowEx_WindowContent;
                xamlMember.Setter = set_36_WindowEx_WindowContent;
                break;
            case "WinUIEx.WindowEx.Width":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Width", "Double");
                xamlMember.Getter = get_37_WindowEx_Width;
                xamlMember.Setter = set_37_WindowEx_Width;
                break;
            case "WinUIEx.WindowEx.Height":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Height", "Double");
                xamlMember.Getter = get_38_WindowEx_Height;
                xamlMember.Setter = set_38_WindowEx_Height;
                break;
            case "WinUIEx.WindowEx.IsResizable":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsResizable", "Boolean");
                xamlMember.Getter = get_39_WindowEx_IsResizable;
                xamlMember.Setter = set_39_WindowEx_IsResizable;
                break;
            case "WinUIEx.WindowEx.PersistenceId":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PersistenceId", "String");
                xamlMember.Getter = get_40_WindowEx_PersistenceId;
                xamlMember.Setter = set_40_WindowEx_PersistenceId;
                break;
            case "WinUIEx.WindowEx.AppWindow":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "AppWindow", "Microsoft.UI.Windowing.AppWindow");
                xamlMember.Getter = get_41_WindowEx_AppWindow;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUIEx.WindowEx.TaskBarIcon":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TaskBarIcon", "WinUIEx.Icon");
                xamlMember.Getter = get_42_WindowEx_TaskBarIcon;
                xamlMember.Setter = set_42_WindowEx_TaskBarIcon;
                break;
            case "WinUIEx.WindowEx.Title":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_43_WindowEx_Title;
                xamlMember.Setter = set_43_WindowEx_Title;
                break;
            case "WinUIEx.WindowEx.IsTitleBarVisible":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsTitleBarVisible", "Boolean");
                xamlMember.Getter = get_44_WindowEx_IsTitleBarVisible;
                xamlMember.Setter = set_44_WindowEx_IsTitleBarVisible;
                break;
            case "WinUIEx.WindowEx.IsMinimizable":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsMinimizable", "Boolean");
                xamlMember.Getter = get_45_WindowEx_IsMinimizable;
                xamlMember.Setter = set_45_WindowEx_IsMinimizable;
                break;
            case "WinUIEx.WindowEx.IsMaximizable":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsMaximizable", "Boolean");
                xamlMember.Getter = get_46_WindowEx_IsMaximizable;
                xamlMember.Setter = set_46_WindowEx_IsMaximizable;
                break;
            case "WinUIEx.WindowEx.WindowState":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "WindowState", "WinUIEx.WindowState");
                xamlMember.Getter = get_47_WindowEx_WindowState;
                xamlMember.Setter = set_47_WindowEx_WindowState;
                break;
            case "WinUIEx.WindowEx.IsShownInSwitchers":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsShownInSwitchers", "Boolean");
                xamlMember.Getter = get_48_WindowEx_IsShownInSwitchers;
                xamlMember.Setter = set_48_WindowEx_IsShownInSwitchers;
                break;
            case "WinUIEx.WindowEx.IsAlwaysOnTop":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsAlwaysOnTop", "Boolean");
                xamlMember.Getter = get_49_WindowEx_IsAlwaysOnTop;
                xamlMember.Setter = set_49_WindowEx_IsAlwaysOnTop;
                break;
            case "WinUIEx.WindowEx.Presenter":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Presenter", "Microsoft.UI.Windowing.AppWindowPresenter");
                xamlMember.Getter = get_50_WindowEx_Presenter;
                xamlMember.SetIsReadOnly();
                break;
            case "WinUIEx.WindowEx.PresenterKind":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PresenterKind", "Microsoft.UI.Windowing.AppWindowPresenterKind");
                xamlMember.Getter = get_51_WindowEx_PresenterKind;
                xamlMember.Setter = set_51_WindowEx_PresenterKind;
                break;
            case "WinUIEx.WindowEx.MinWidth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.Getter = get_52_WindowEx_MinWidth;
                xamlMember.Setter = set_52_WindowEx_MinWidth;
                break;
            case "WinUIEx.WindowEx.MinHeight":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MinHeight", "Double");
                xamlMember.Getter = get_53_WindowEx_MinHeight;
                xamlMember.Setter = set_53_WindowEx_MinHeight;
                break;
            case "WinUIEx.WindowEx.MaxWidth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_54_WindowEx_MaxWidth;
                xamlMember.Setter = set_54_WindowEx_MaxWidth;
                break;
            case "WinUIEx.WindowEx.MaxHeight":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MaxHeight", "Double");
                xamlMember.Getter = get_55_WindowEx_MaxHeight;
                xamlMember.Setter = set_55_WindowEx_MaxHeight;
                break;
            case "WinUIEx.WindowEx.Backdrop":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinUIEx.WindowEx");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Backdrop", "WinUIEx.SystemBackdrop");
                xamlMember.Getter = get_56_WindowEx_Backdrop;
                xamlMember.Setter = set_56_WindowEx_Backdrop;
                break;
            case "Microsoft.UI.Xaml.Media.MicaBackdrop.Kind":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.MicaBackdrop");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Kind", "Microsoft.UI.Composition.SystemBackdrops.MicaKind");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_MicaBackdrop_Kind;
                xamlMember.Setter = set_57_MicaBackdrop_Kind;
                break;
            case "Microsoft.UI.Xaml.Thickness.Left":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Left", "Double");
                xamlMember.Getter = get_58_Thickness_Left;
                xamlMember.Setter = set_58_Thickness_Left;
                break;
            case "Microsoft.UI.Xaml.Thickness.Top":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Top", "Double");
                xamlMember.Getter = get_59_Thickness_Top;
                xamlMember.Setter = set_59_Thickness_Top;
                break;
            case "Microsoft.UI.Xaml.Thickness.Right":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Right", "Double");
                xamlMember.Getter = get_60_Thickness_Right;
                xamlMember.Setter = set_60_Thickness_Right;
                break;
            case "Microsoft.UI.Xaml.Thickness.Bottom":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Bottom", "Double");
                xamlMember.Getter = get_61_Thickness_Bottom;
                xamlMember.Setter = set_61_Thickness_Bottom;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.TopLeft":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TopLeft", "Double");
                xamlMember.Getter = get_62_CornerRadius_TopLeft;
                xamlMember.Setter = set_62_CornerRadius_TopLeft;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.TopRight":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TopRight", "Double");
                xamlMember.Getter = get_63_CornerRadius_TopRight;
                xamlMember.Setter = set_63_CornerRadius_TopRight;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.BottomRight":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "BottomRight", "Double");
                xamlMember.Getter = get_64_CornerRadius_BottomRight;
                xamlMember.Setter = set_64_CornerRadius_BottomRight;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.BottomLeft":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "BottomLeft", "Double");
                xamlMember.Getter = get_65_CornerRadius_BottomLeft;
                xamlMember.Setter = set_65_CornerRadius_BottomLeft;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.Content":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_ScrollView_Content;
                xamlMember.Setter = set_66_ScrollView_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollBarVisibility":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_ScrollView_ComputedHorizontalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedHorizontalScrollMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ComputedHorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_ScrollView_ComputedHorizontalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollBarVisibility":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollBarVisibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_ScrollView_ComputedVerticalScrollBarVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ComputedVerticalScrollMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ComputedVerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_ScrollView_ComputedVerticalScrollMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ContentOrientation":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ContentOrientation", "Microsoft.UI.Xaml.Controls.ScrollingContentOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_ScrollView_ContentOrientation;
                xamlMember.Setter = set_71_ScrollView_ContentOrientation;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.CurrentAnchor":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "CurrentAnchor", "Microsoft.UI.Xaml.UIElement");
                xamlMember.Getter = get_72_ScrollView_CurrentAnchor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExpressionAnimationSources":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ExpressionAnimationSources", "Microsoft.UI.Composition.CompositionPropertySet");
                xamlMember.Getter = get_73_ScrollView_ExpressionAnimationSources;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentHeight":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ExtentHeight", "Double");
                xamlMember.Getter = get_74_ScrollView_ExtentHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ExtentWidth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ExtentWidth", "Double");
                xamlMember.Getter = get_75_ScrollView_ExtentWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalAnchorRatio":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HorizontalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_ScrollView_HorizontalAnchorRatio;
                xamlMember.Setter = set_76_ScrollView_HorizontalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalOffset":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Double");
                xamlMember.Getter = get_77_ScrollView_HorizontalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollBarVisibility":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_ScrollView_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_78_ScrollView_HorizontalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollChainMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HorizontalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_ScrollView_HorizontalScrollChainMode;
                xamlMember.Setter = set_79_ScrollView_HorizontalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HorizontalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_ScrollView_HorizontalScrollMode;
                xamlMember.Setter = set_80_ScrollView_HorizontalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.HorizontalScrollRailMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HorizontalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_ScrollView_HorizontalScrollRailMode;
                xamlMember.Setter = set_81_ScrollView_HorizontalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.IgnoredInputKinds":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IgnoredInputKinds", "Microsoft.UI.Xaml.Controls.ScrollingInputKinds");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_ScrollView_IgnoredInputKinds;
                xamlMember.Setter = set_82_ScrollView_IgnoredInputKinds;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MaxZoomFactor":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MaxZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_ScrollView_MaxZoomFactor;
                xamlMember.Setter = set_83_ScrollView_MaxZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.MinZoomFactor":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MinZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_ScrollView_MinZoomFactor;
                xamlMember.Setter = set_84_ScrollView_MinZoomFactor;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollPresenter":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ScrollPresenter", "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_ScrollView_ScrollPresenter;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter.Content":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Primitives.ScrollPresenter");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Content", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_ScrollPresenter_Content;
                xamlMember.Setter = set_86_ScrollPresenter_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableHeight":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ScrollableHeight", "Double");
                xamlMember.Getter = get_87_ScrollView_ScrollableHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ScrollableWidth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ScrollableWidth", "Double");
                xamlMember.Getter = get_88_ScrollView_ScrollableWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.State":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "State", "Microsoft.UI.Xaml.Controls.ScrollingInteractionState");
                xamlMember.Getter = get_89_ScrollView_State;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalAnchorRatio":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VerticalAnchorRatio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_ScrollView_VerticalAnchorRatio;
                xamlMember.Setter = set_90_ScrollView_VerticalAnchorRatio;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalOffset":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Double");
                xamlMember.Getter = get_91_ScrollView_VerticalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollBarVisibility":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollingScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_ScrollView_VerticalScrollBarVisibility;
                xamlMember.Setter = set_92_ScrollView_VerticalScrollBarVisibility;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollChainMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VerticalScrollChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_ScrollView_VerticalScrollChainMode;
                xamlMember.Setter = set_93_ScrollView_VerticalScrollChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VerticalScrollMode", "Microsoft.UI.Xaml.Controls.ScrollingScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_ScrollView_VerticalScrollMode;
                xamlMember.Setter = set_94_ScrollView_VerticalScrollMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.VerticalScrollRailMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "VerticalScrollRailMode", "Microsoft.UI.Xaml.Controls.ScrollingRailMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_ScrollView_VerticalScrollRailMode;
                xamlMember.Setter = set_95_ScrollView_VerticalScrollRailMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportHeight":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewportHeight", "Double");
                xamlMember.Getter = get_96_ScrollView_ViewportHeight;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ViewportWidth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewportWidth", "Double");
                xamlMember.Getter = get_97_ScrollView_ViewportWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomChainMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ZoomChainMode", "Microsoft.UI.Xaml.Controls.ScrollingChainMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_ScrollView_ZoomChainMode;
                xamlMember.Setter = set_98_ScrollView_ZoomChainMode;
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomFactor":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Single");
                xamlMember.Getter = get_99_ScrollView_ZoomFactor;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.ScrollView.ZoomMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ScrollView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ZoomMode", "Microsoft.UI.Xaml.Controls.ScrollingZoomMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_ScrollView_ZoomMode;
                xamlMember.Setter = set_100_ScrollView_ZoomMode;
                break;
            case "DisenoVigas.Views.DisenoPage.ViewModel":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Views.DisenoPage");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewModel", "DisenoVigas.ViewModels.DisenoViewModel");
                xamlMember.Getter = get_101_DisenoPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "DisenoVigas.Views.DisenoRevisionPage.ViewModel":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Views.DisenoRevisionPage");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewModel", "DisenoVigas.ViewModels.DisenoRevisionViewModel");
                xamlMember.Getter = get_102_DisenoRevisionPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "DisenoVigas.Views.MainPage.ViewModel":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Views.MainPage");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewModel", "DisenoVigas.ViewModels.MainViewModel");
                xamlMember.Getter = get_103_MainPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "DisenoVigas.Views.RevisionPage.ViewModel":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Views.RevisionPage");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewModel", "DisenoVigas.ViewModels.RevisionViewModel");
                xamlMember.Getter = get_104_RevisionPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "DisenoVigas.Views.SettingsPage.ViewModel":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Views.SettingsPage");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewModel", "DisenoVigas.ViewModels.SettingsViewModel");
                xamlMember.Getter = get_105_SettingsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_106_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_107_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_NavigationView_SelectedItem;
                xamlMember.Setter = set_108_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_109_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_110_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_NavigationView_Header;
                xamlMember.Setter = set_111_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_112_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_114_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_115_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_116_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_117_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_118_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_NavigationView_ContentOverlay;
                xamlMember.Setter = set_119_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_122_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_123_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_124_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_125_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_126_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_127_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_128_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_129_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_130_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_131_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_132_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_133_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_134_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_NavigationView_PaneFooter;
                xamlMember.Setter = set_135_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_NavigationView_PaneHeader;
                xamlMember.Setter = set_136_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_NavigationView_PaneTitle;
                xamlMember.Setter = set_137_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_138_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_139_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_141_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_143_Interaction_Behaviors;
                xamlMember.Setter = set_143_Interaction_Behaviors;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_NavigationViewItem_Icon;
                xamlMember.Setter = set_144_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_146_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_147_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_148_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_149_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_151_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_152_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_153_NavigationViewItemBase_IsSelected;
                break;
            case "DisenoVigas.Helpers.NavigationHelper.NavigateTo":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Helpers.NavigationHelper");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "NavigateTo", "String");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_154_NavigationHelper_NavigateTo;
                xamlMember.Setter = set_154_NavigationHelper_NavigateTo;
                break;
            case "DisenoVigas.Behaviors.NavigationViewHeaderBehavior.DefaultHeader":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Behaviors.NavigationViewHeaderBehavior");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "DefaultHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_NavigationViewHeaderBehavior_DefaultHeader;
                xamlMember.Setter = set_155_NavigationViewHeaderBehavior_DefaultHeader;
                break;
            case "DisenoVigas.Behaviors.NavigationViewHeaderBehavior.DefaultHeaderTemplate":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Behaviors.NavigationViewHeaderBehavior");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "DefaultHeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_156_NavigationViewHeaderBehavior_DefaultHeaderTemplate;
                xamlMember.Setter = set_156_NavigationViewHeaderBehavior_DefaultHeaderTemplate;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior`1<Microsoft.UI.Xaml.Controls.NavigationView>.AssociatedObject":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior`1<Microsoft.UI.Xaml.Controls.NavigationView>");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember.Getter = get_157_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "DisenoVigas.Behaviors.NavigationViewHeaderBehavior.HeaderMode":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Behaviors.NavigationViewHeaderBehavior");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HeaderMode", "DisenoVigas.Behaviors.NavigationViewHeaderMode");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.Page");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_158_NavigationViewHeaderBehavior_HeaderMode;
                xamlMember.Setter = set_158_NavigationViewHeaderBehavior_HeaderMode;
                break;
            case "DisenoVigas.Behaviors.NavigationViewHeaderBehavior.HeaderContext":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Behaviors.NavigationViewHeaderBehavior");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HeaderContext", "Object");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.Page");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_159_NavigationViewHeaderBehavior_HeaderContext;
                xamlMember.Setter = set_159_NavigationViewHeaderBehavior_HeaderContext;
                break;
            case "DisenoVigas.Behaviors.NavigationViewHeaderBehavior.HeaderTemplate":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Behaviors.NavigationViewHeaderBehavior");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetTargetTypeName("Microsoft.UI.Xaml.Controls.Page");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_160_NavigationViewHeaderBehavior_HeaderTemplate;
                xamlMember.Setter = set_160_NavigationViewHeaderBehavior_HeaderTemplate;
                break;
            case "DisenoVigas.Views.ShellPage.ViewModel":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Views.ShellPage");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewModel", "DisenoVigas.ViewModels.ShellViewModel");
                xamlMember.Getter = get_161_ShellPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "DisenoVigas.Views.VigaAcoplePage.ViewModel":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("DisenoVigas.Views.VigaAcoplePage");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "ViewModel", "DisenoVigas.ViewModels.VigaAcopleViewModel");
                xamlMember.Getter = get_162_VigaAcoplePage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_163_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_TreeViewNode_Content;
                xamlMember.Setter = set_164_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_167_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_167_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_168_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_169_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::DisenoVigas.DisenoVigas_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

